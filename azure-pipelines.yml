pool:
  vmImage: "ubuntu-16.04"

variables:
  NUGET_PACKAGES: $(Build.SourcesDirectory)/packages
  vstsFeed: "d09745d0-213d-4136-bcd1-78ba4998212a"

  keyfile: "**/*.csproj, **/*.sln"
  objpath: "blog.server/obj"
  objcache: $(NUGET_PACKAGES)/$(objpath)
  objproject: $(Build.SourcesDirectory)/$(objpath)

steps:
  - task: RestoreAndSaveCache@1
    displayName: "[Server - Restore Cache] Restore artifact based on: $(keyfile)"
    inputs:
      keyfile: $(keyfile)
      targetfolder: "$(NUGET_PACKAGES)"
      vstsFeed: $(vstsFeed)

  - script: |
      mkdir -p $(objcache)
      mkdir -p $(objproject)

      echo "[ls root]"
      ls

      echo "[ls $(NUGET_PACKAGES)]"
      ls $(NUGET_PACKAGES)

      echo "[ls $(objcache)]"
      ls $(objcache)

      echo "[cp $(objcache)/* $(objproject)/]"
      cp $(objcache)/* $(objproject)/ || true
    displayName: "[Copy] Copy from cache"

  - script: dotnet --info
    displayName: "[Server] dotnet --info"

  - script: dotnet restore
    displayName: "[Server] Dotnet restore"

  - script: |
      mkdir -p $(objcache)
      mkdir -p $(objproject)

      echo "[ls root]"
      ls

      echo "[ls blog.server]"
      ls blog.server

      echo "[ls $(objproject)]"
      ls $(objproject)

      echo "[cp $(objproject)/* $(objcache)/]"
      cp $(objproject)/* $(objcache)/ || true
    displayName: "[Copy] Copy to cache"

  - script: dotnet build --no-restore
    displayName: "[Server] dotnet build"
